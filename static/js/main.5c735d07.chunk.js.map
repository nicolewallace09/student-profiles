{"version":3,"sources":["components/Student.js","components/StudentList.js","App.js","reportWebVitals.js","index.js"],"names":["Student","props","useState","open","setOpen","xmlns","width","height","fill","className","viewBox","d","status","setStatus","tags","setTags","Card","Row","src","pic","alt","firstName","lastName","email","company","skill","arr","sum","average","i","length","parseInt","getAverage","grades","Collapse","isOpen","onEntered","class","onExited","id","map","tag","index","onClick","indexToRemove","filter","_","type","onKeyUp","event","key","target","value","addTags","placeholder","Button","color","StudentList","students","data","setData","q","setQ","displayData","a","fetch","response","json","responseJson","useEffect","aria-label","onChange","student","some","search","toLowerCase","includes","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c735d07.chunk.js","sourcesContent":["import React, { useState } from 'react'; \nimport { Row, Card } from 'react-bootstrap';\nimport { Collapse, Button } from 'reactstrap';\n\nfunction Student(props) {\n    // state for toggle button \n    const [open, setOpen] = useState(false); \n    const [status, setStatus] = useState\n        (<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" fill=\"#b2b2b2\" className=\"bi bi-plus\" viewBox=\"0 0 16 16\">\n        <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\n        </svg>); \n\n    const onEntered= () => setStatus\n        (<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" fill=\"#b2b2b2\" class=\"bi bi-dash\" viewBox=\"0 0 16 16\">\n        <path d=\"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\"/>\n    </svg>);\n\n    const onExited = () => setStatus\n        (<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" fill=\"#b2b2b2\" className=\"bi bi-plus\" viewBox=\"0 0 16 16\">\n        <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\n        </svg>);\n\n    const toggle = () => setOpen(!open); \n\n    // function to get the average of grades to use to display \n    const getAverage = (arr) => {\n        let sum = 0;\n        let average = 0;\n\n    for(let i = 0; i < arr.length; i++) {\n        arr[i] = parseInt(arr[i]);\n        sum += arr[i];\n        average = sum/8;\n    }\n        return average ;\n    };\n\n    // tags \n    const [tags, setTags] = useState([]);\n\n    const addTags = event => {\n\t\tif (event.key === 'Enter' && event.target.value !== '') {\n\t\t\tsetTags([...tags, event.target.value]);\n\t\t\tevent.target.value = \"\";\n\t\t}\n    };\n\n\tconst removeTags = indexToRemove => {\n\t\tsetTags([...tags.filter((_, index) => index !== indexToRemove)]);\n\t};\n\n\n return (\n    <div className=\"students\">\n        <Card className=\"student-cards\" key={props.id}>\n          <Row>\n                <div className=\"student-icon col-3\">\n                    <img src={props.pic} alt=\"icon\"/>\n                </div>\n              \n                <div className=\"student-info col-7\">\n                    <p className=\"name\">{props.firstName} {props.lastName}</p>\n\n                    <div className=\"info-details\">\n                        <p className=\"email\">Email: {props.email}</p>\n                        <p className=\"company\">Company: {props.company}</p>\n                        <p className=\"skill\">Skill: {props.skill}</p>\n                        <p className=\"average\">Average: {getAverage(props.grades)}%</p>\n                        \n                        <Collapse\n                            isOpen={open}\n                            onEntered={onEntered}\n                            onExited={onExited}\n                        >\n                            <div className=\"card-body\">\n                                <p className=\"grades\">Test 1: {props.grades[0]}%</p>\n                                <p className=\"grades\">Test 2: {props.grades[1]}%</p>\n                                <p className=\"grades\">Test 3: {props.grades[2]}%</p>\n                                <p className=\"grades\">Test 4: {props.grades[3]}%</p>\n                                <p className=\"grades\">Test 5: {props.grades[4]}%</p>\n                                <p className=\"grades\">Test 6: {props.grades[5]}%</p>\n                                <p className=\"grades\">Test 7: {props.grades[6]}%</p>\n                                <p className=\"grades\">Test 8: {props.grades[7]}%</p>\n                            </div>\n                        </Collapse>\n\n                        <div className=\"tags-section\">\n                            <ul id=\"tags\">\n                                {tags.map((tag, index) => (\n                                    <li key={index} className=\"tag\">\n                                        <span className='tag-name'>{tag}</span>\n                                        <span className='close' onClick={() => removeTags(index)}>\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"red\" class=\"bi bi-x\" viewBox=\"0 0 16 16\">\n                                            <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\n                                            </svg>\n                                        </span>\n                                    </li>\n                                ))}\n                            </ul>\n\n                            <input\n                            className=\"tags-input\"\n                            type=\"text\"\n                            onKeyUp={event => event.key === \"Enter\" ? addTags(event) : null}\n                            placeholder=\"Add tag\"\n                            />\n                        </div>\n                    </div> \n                </div>\n\n                <div className=\"toggle-button col-2\">\n                    <Button color=\"none\" onClick={toggle}>{status}</Button>\n                </div>\n          \n          </Row>\n        </Card>\n      \n    </div>\n\n )};\n\nexport default Student; \n","import React, { useState, useEffect } from 'react'; \nimport Student from './Student'; \n\nfunction StudentList() {\n    // data from API\n    const [data, setData] = useState([]); \n\n    // search by name\n    const [q, setQ] = useState(''); \n\n    // search by tag\n    // const [tags, setTags] = useState(''); \n  \n    // displaying API data \n    const displayData = async() => {\n      const url = `https://api.hatchways.io/assessment/students`;\n  \n      const response = await fetch(url); \n      const responseJson = await response.json(); \n      \n      \n      if(responseJson.students) {\n        setData(responseJson.students)\n      }\n    };\n\n    useEffect(() => {\n        displayData();\n    }, []); \n\n    // original function - keeping as backup for now \n    // function searchStudents (students) {\n    //     return students.filter(student => student.firstName.toLowerCase().indexOf(q.toLowerCase()) > -1 || student.lastName.toLowerCase().indexOf(q.toLowerCase()) > -1);\n    // }\n\n    const searchStudents = (students) => {\n        return students.filter((student) =>\n          [student.firstName, student.lastName, `${student.firstName} ${student.lastName}`].some(search => search.toLowerCase().includes(q.toLowerCase())));\n    };\n\n    // function searchTags (tags) {\n    //     return tags.filter(tag => tag.firstName.toLowerCase().indexOf(q) > -1 ||  student.lastName.toLowerCase().indexOf(q) > -1);\n    // }\n\n return (\n    <>\n    <div className=\"search-bar\">\n        <input className=\"form-control\" \n            type=\"search\" \n            placeholder=\"Search by name\" \n            aria-label=\"Search\"\n            value={q}\n            onChange={(event) => setQ(event.target.value)}>\n        </input>\n    </div>\n\n    {/* <div className=\"search-tag\">\n        <input className=\"tag-form-control\" \n            type=\"search\" \n            placeholder=\"Search by tag\" \n            aria-label=\"Search\"\n            value={tags}\n            onChange={(event) => setTags(event.target.value)}>\n        </input>\n    </div> */}\n\n    <div className=\"app-container\">\n        <div className='student-list'>\n            {data && searchStudents(data).map((student => ( \n                <Student \n                    key={student.id}\n                    pic={student.pic}\n                    firstName={student.firstName}\n                    lastName={student.lastName}\n                    email={student.email}\n                    company={student.company}\n                    skill={student.skill}\n                    grades={student.grades}\n                />\n        )))}\n        </div>\n    </div>\n    </> \n )};\n\n\nexport default StudentList; \n\n\n","import React from 'react';\nimport StudentList from './components/StudentList';  \nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <>\n    <div className=\"page\">\n      <div className=\"app\">\n        <StudentList/>\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}